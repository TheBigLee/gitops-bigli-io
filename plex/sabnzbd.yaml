---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: sabnzbd-config
  labels:
    app.kubernetes.io/instance: sabnzbd
    app.kubernetes.io/name: sabnzbd
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "1Gi"
  storageClassName: "local-path-ssd"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: incomplete-downloads
  labels:
    app.kubernetes.io/instance: sabnzbd
    app.kubernetes.io/name: sabnzbd
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "50Gi"
  storageClassName: "local-path-ssd"
---
apiVersion: v1
kind: Service
metadata:
  name: sabnzbd
  labels:
    app.kubernetes.io/instance: sabnzbd
    app.kubernetes.io/name: sabnzbd
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: sabnzbd
    app.kubernetes.io/instance: sabnzbd
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sabnzbd
  labels:
    app.kubernetes.io/instance: sabnzbd
    app.kubernetes.io/name: sabnzbd
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: sabnzbd
      app.kubernetes.io/instance: sabnzbd
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sabnzbd
        app.kubernetes.io/instance: sabnzbd
    spec:
      serviceAccountName: default
      automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      containers:
        - name: sabnzbd
          image: "lscr.io/linuxserver/sabnzbd:latest"
          imagePullPolicy: Always
          env:
            - name: "TZ"
              value: "Europe/Zurich"
            - name: "PUID"
              value: "1000"
            - name: "GUID"
              value: "1000"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /config
            - name: downloads
              mountPath: /downloads
            - name: incomplete-downloads
              mountPath: /incomplete-downloads
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 0
            failureThreshold: 30
            timeoutSeconds: 1
            periodSeconds: 5
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: nzbget-config
        - name: downloads
          persistentVolumeClaim:
            claimName: media-downloads
        - name: incomplete-downloads
          persistentVolumeClaim:
            claimName: incomplete-downloads
---
# Source: nzbget/templates/common.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sabnzbd
  labels:
    app.kubernetes.io/instance: sabnzbd
    app.kubernetes.io/name: sabnzbd
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    ingress.kubernetes.io/ssl-redirect: "true"
    kubernetes.io/ingress.class: traefik
spec:
  tls:
    - hosts:
        - "sabnzbd.bigli.io"
      secretName: "sabnzbd-tls"
  rules:
    - host: "sabnzbd.bigli.io"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: sabnzbd
                port:
                  number: 8080
