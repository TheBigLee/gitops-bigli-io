---
# Source: sonarr/templates/config-pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: sonarr-config
  labels:
    app.kubernetes.io/name: sonarr
    helm.sh/chart: sonarr-3.2.0
    app.kubernetes.io/instance: sonarr
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "1Gi"
  storageClassName: "local-path-ssd"
---
# Source: sonarr/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: sonarr
  labels:
    app.kubernetes.io/name: sonarr
    helm.sh/chart: sonarr-3.2.0
    app.kubernetes.io/instance: sonarr
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8989
      protocol: TCP
      targetPort: http

  selector:
    app.kubernetes.io/name: sonarr
    app.kubernetes.io/instance: sonarr
---
# Source: sonarr/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr
  labels:
    app.kubernetes.io/name: sonarr
    helm.sh/chart: sonarr-3.2.0
    app.kubernetes.io/instance: sonarr
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: sonarr
      app.kubernetes.io/instance: sonarr
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sonarr
        app.kubernetes.io/instance: sonarr
    spec:
      containers:
        - name: sonarr
          image: "linuxserver/sonarr:latest"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8989
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 60
            failureThreshold: 5
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 60
            failureThreshold: 5
            timeoutSeconds: 10
          env:
            - name: TZ
              value: "Europe/Zurich"
            - name: PUID
              value: "1001"
            - name: PGID
              value: "1001"
          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /downloads
              name: downloads
            - mountPath: /tv
              name: tv
              subPath: tvshows
          resources:
            {}
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: sonarr-config
      - name: downloads
        persistentVolumeClaim:
          claimName: media-downloads
      - name: tv
        persistentVolumeClaim:
          claimName: plex-media
---
# Source: sonarr/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: sonarr
  labels:
    app.kubernetes.io/name: sonarr
    helm.sh/chart: sonarr-3.2.0
    app.kubernetes.io/instance: sonarr
    app.kubernetes.io/managed-by: Helm
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    ingress.kubernetes.io/ssl-redirect: "true"
    kubernetes.io/ingress.class: traefik
spec:
  tls:
    - hosts:
        - "sonarr.bigli.io"
      secretName: sonarr-tls
  rules:
    - host: "sonarr.bigli.io"
      http:
        paths:
          - path: /
            backend:
              serviceName: sonarr
              servicePort: http
