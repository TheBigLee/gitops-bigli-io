---
# Source: paperless/templates/common.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: paperless-data
  labels:
    app.kubernetes.io/instance: paperless
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: paperless
    app.kubernetes.io/version: 1.7.1
    helm.sh/chart: paperless-8.8.3
  annotations:
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10G"
---
# Source: paperless/templates/common.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: paperless-media
  labels:
    app.kubernetes.io/instance: paperless
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: paperless
    app.kubernetes.io/version: 1.7.1
    helm.sh/chart: paperless-8.8.3
  annotations:
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "50G"
---
# Source: paperless/templates/common.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: paperless-consume
  labels:
    app.kubernetes.io/instance: paperless
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: paperless
    app.kubernetes.io/version: 1.7.1
    helm.sh/chart: paperless-8.8.3
  annotations:
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "1G"
---
# Source: paperless/templates/common.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: paperless-export
  labels:
    app.kubernetes.io/instance: paperless
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: paperless
    app.kubernetes.io/version: 1.7.1
    helm.sh/chart: paperless-8.8.3
  annotations:
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "5G"
---
# Source: paperless/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: paperless
  labels:
    app.kubernetes.io/instance: paperless
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: paperless
    app.kubernetes.io/version: 1.7.1
    helm.sh/chart: paperless-8.8.3
  annotations:
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: paperless
    app.kubernetes.io/instance: paperless
---
# Source: paperless/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperless
  labels:
    app.kubernetes.io/instance: paperless
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: paperless
    app.kubernetes.io/version: 1.7.1
    helm.sh/chart: paperless-8.8.3
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: paperless
      app.kubernetes.io/instance: paperless
  template:
    metadata:

      labels:
        app.kubernetes.io/name: paperless
        app.kubernetes.io/instance: paperless
    spec:

      serviceAccountName: default
      automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      containers:
        - name: paperless
          image: "ghcr.io/paperless-ngx/paperless-ngx:latest"
          imagePullPolicy: Always
          env:
            - name: "COMPOSE_PROJECT_NAME"
              value: "paperless"
            - name: "PAPERLESS_DBHOST"
              value: 'paperless-postgresql.paperless'
            - name: "PAPERLESS_OCR_LANGUAGE"
              value: "deu+eng"
            - name: "PAPERLESS_PORT"
              value: "8000"
            - name: "PAPERLESS_REDIS"
              value: 'redis://paperless-redis-headless.paperless:6379'
            - name: "PAPERLESS_TIME_ZONE"
              value: "Europe/Zurich"
            - name: "PAPERLESS_URL"
              value: "https://paperless.bigli.io"
            - name: "PAPERLESS_ADMIN_USER"
              valueFrom:
                secretKeyRef:
                  name: paperless-admin
                  key: admin-user
            - name: "PAPERLESS_ADMIN_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: paperless-admin
                  key: admin-password
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          volumeMounts:
            - name: data
              mountPath: /usr/src/paperless/data
            - name: media
              mountPath: /usr/src/paperless/media
            - name: consume
              mountPath: /usr/src/paperless/consume
            - name: export
              mountPath: /usr/src/paperless/export
          livenessProbe:
            tcpSocket:
              port: 8000
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 8000
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 8000
            initialDelaySeconds: 0
            failureThreshold: 30
            timeoutSeconds: 1
            periodSeconds: 5
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: paperless-data
        - name: media
          persistentVolumeClaim:
            claimName: paperless-media
        - name: consume
          persistentVolumeClaim:
            claimName: paperless-consume
        - name: export
          persistentVolumeClaim:
            claimName: paperless-export
---
# Source: paperless/templates/common.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: paperless
  labels:
    app.kubernetes.io/instance: paperless
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: paperless
    app.kubernetes.io/version: 1.7.1
    helm.sh/chart: paperless-8.8.3
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    ingress.kubernetes.io/ssl-redirect: "true"
    kubernetes.io/ingress.class: traefik
spec:
  tls:
    - hosts:
        - "paperless.bigli.io"
      secretName: "paperless-tls"
  rules:
    - host: "paperless.bigli.io"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: paperless
                port:
                  number: 8000
