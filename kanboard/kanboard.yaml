---
# Source: kanboard/templates/common.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: kanboard-data
  labels:
    app.kubernetes.io/instance: kanboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kanboard
    app.kubernetes.io/version: v1.2.20
    helm.sh/chart: kanboard-5.1.2
  annotations:
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "5Gi"
  storageClassName: "local-path-ssd"
---
# Source: kanboard/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: kanboard
  labels:
    app.kubernetes.io/instance: kanboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kanboard
    app.kubernetes.io/version: v1.2.20
    helm.sh/chart: kanboard-5.1.2
  annotations:
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: kanboard
    app.kubernetes.io/instance: kanboard
---
# Source: kanboard/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kanboard
  labels:
    app.kubernetes.io/instance: kanboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kanboard
    app.kubernetes.io/version: v1.2.20
    helm.sh/chart: kanboard-5.1.2
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: kanboard
      app.kubernetes.io/instance: kanboard
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kanboard
        app.kubernetes.io/instance: kanboard
    spec:
      
      serviceAccountName: default
      automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      containers:
        - name: kanboard
          image: "kanboard/kanboard:latest"
          imagePullPolicy: Always
          env:
            - name: DB_DRIVER
              value: sqlite
            - name: DB_HOSTNAME
              value: null
            - name: DB_NAME
              value: null
            - name: DB_PASSWORD
              value: null
            - name: DB_PORT
              value: null
            - name: DB_USERNAME
              value: null
            - name: LOG_DRIVER
              value: stdout
            - name: MAIL_CONFIGURATION
              value: "false"
            - name: TZ
              value: Europe/Zurich
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: data
              mountPath: /var/www/app/data
          livenessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 0
            failureThreshold: 30
            timeoutSeconds: 1
            periodSeconds: 5
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: kanboard-data
---
# Source: kanboard/templates/common.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kanboard
  labels:
    app.kubernetes.io/instance: kanboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kanboard
    app.kubernetes.io/version: v1.2.20
    helm.sh/chart: kanboard-5.1.2
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    ingress.kubernetes.io/ssl-redirect: "true"
    kubernetes.io/ingress.class: traefik
spec:
  tls:
    - hosts:
        - "kanboard.bigli.io"
      secretName: "nzbget-tls"
  rules:
    - host: "kanboard.bigli.io"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: kanboard
                port:
                  number: 80
